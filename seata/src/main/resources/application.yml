server:
  port: 8083

mybatis:
  mapper-locations:
    - classpath:mappers
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true
  type-aliases-package: com.much.it.entity

spring:
  application:
    name: seata
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
    sentinel:
      transport:
        dashboard: 127.0.0.1:8080
      eager: true

#    alibaba:
#      seata:
#        tx-service-group:
  shardingsphere:
    datasource:
      names: product-00,product-02,product-02
      product-00:
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://localhost:3306/product?charactorEncoding=utf8&allowMulitQueries=ture&useSSL=false&serverTimezone=UTC
        username: ENC(R8xDcDANYoJwfbZxz+l/YA==)
        password: ENC(GEQV1X7/AVp6absLAk10jg==)
      product-01:
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://localhost:3306/product?charactorEncoding=utf8&allowMulitQueries=ture&useSSL=false&serverTimezone=UTC
        username: ENC(R8xDcDANYoJwfbZxz+l/YA==)
        password: ENC(GEQV1X7/AVp6absLAk10jg==)
      product-02:
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://localhost:3306/product?charactorEncoding=utf8&allowMulitQueries=ture&useSSL=false&serverTimezone=UTC
        username: ENC(R8xDcDANYoJwfbZxz+l/YA==)
        password: ENC(GEQV1X7/AVp6absLAk10jg==)
    sharding:
      default-database-strategy:
        inline:
          sharding-column: product_id
          algorithm-expression: product-0$->{product_id % 3}
      tables:
        product:
          actualDataNodes: product-0$->{0..2}.product_0$->{0..2}
          tableStrategy:
            inline:
              shardingColumn: product_id
              algorithmExpression: product_0$->{product_id % 3}
      binding-tables: product
    props:
      sql:
        show: true
      query:
        with:
          chipher:
            column: true

