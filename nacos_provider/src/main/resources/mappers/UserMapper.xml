<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.much.it.mapper.UserMapper">

    <resultMap id="baseResutMap" type="com.much.it.entity.User">
        <result column="id" jdbcType="BIGINT" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="username"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="age" jdbcType="INTEGER" property="age"/>
        <result column="sex" jdbcType="INTEGER" property="sex"/>
        <result column="birthday" jdbcType="TIMESTAMP" property="birthday"/>
        <result column="note" jdbcType="VARCHAR" property="note"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>

    <sql id="selectField">
        id,username,password,name ,age,sex,birthday,note,create_time,update_time
    </sql>


    <select id="selectById" resultMap="baseResutMap" parameterType="com.much.it.entity.User">
        select
        <include refid="selectField"></include>
        from user
        <where>
            id = #{id,jdbcType=BIGINT}
        </where>
    </select>

    <insert id="insertUser" parameterType="java.util.List">
        insert into user (
            username,
            password,
            name,
            age,
            sex,
            note,
            birthday,
            create_time,
            update_time
        )
        values (
            #{username,jdbcType=VARCHAR},
            #{password,jdbcType=VARCHAR},
            #{name,jdbcType=VARCHAR},
            #{age,jdbcType=INTEGER},
            #{sex,jdbcType=INTEGER},
            #{note,jdbcType=VARCHAR},
            #{birthday,jdbcType=TIMESTAMP},
            #{createTime,jdbcType=TIMESTAMP},
            #{updateTime,jdbcType=TIMESTAMP}
        )
    </insert>

    <insert id="insertBatch">
        insert into user (
        username,
        password,
        name,
        age,
        sex,
        note,
        birthday,
        create_time,
        update_time
        )
        <foreach collection="list" item="user" open="values (" separator="),(" close=")">
            #{user.username,jdbcType=VARCHAR},
            #{user.password,jdbcType=VARCHAR},
            #{user.name,jdbcType=VARCHAR},
            #{user.age,jdbcType=INTEGER},
            #{user.sex,jdbcType=INTEGER},
            #{user.note,jdbcType=VARCHAR},
            #{user.birthday,jdbcType=TIMESTAMP},
            #{user.createTime,jdbcType=TIMESTAMP},
            #{user.updateTime,jdbcType=TIMESTAMP}
        </foreach>
    </insert>

    <delete id="deleteAll">
        delete from user
    </delete>

    <delete id="deleteById">
        delete from user
        <where>
            id = #{id,jdbcType=BIGINT}
        </where>
    </delete>

    <select id="findAll" resultMap="baseResutMap">
        select
        <include refid="selectField"></include>
        from user
    </select>

    <select id="findUserByPhoneAndPassword" resultMap="baseResutMap">
        select
            <include refid="selectField"></include>
        from user
        <where>
            <if test="param1 !=null and param1 !=''">
                username = #{param1,jdbcType=VARCHAR}
            </if>
            <if test="param2 !=null and param2 !=''">
                password = #{param2,jdbcType=VARCHAR}
            </if>
        </where>
    </select>
</mapper>