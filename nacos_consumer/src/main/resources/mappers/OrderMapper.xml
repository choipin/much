<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.much.it.mapper.OrderMapper">

    <resultMap id="baseResutMap" type="com.much.it.entity.Order">
        <result column="id" jdbcType="BIGINT" property="id"/>
        <result column="order_number" jdbcType="VARCHAR" property="orderNumber"/>
        <result column="price" jdbcType="DECIMAL" property="price"/>
        <result column="img" jdbcType="VARCHAR" property="img"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="product_id" jdbcType="BIGINT" property="productId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>

    <sql id="selectField">
        id,order_number,price,img ,user_id,product_id,create_time,update_time
    </sql>


    <select id="selectById" resultMap="baseResutMap" parameterType="com.much.it.entity.User">
        select
        <include refid="selectField"></include>
        from order_01
        <where>
            id = #{id,jdbcType=BIGINT}
        </where>
    </select>

    <insert id="insertOrder" parameterType="java.util.List">
        insert into order_01 (
            order_number,
            price,
            img,
            user_id,
            product_id,
            create_time,
            update_time
        )
        values (
            #{orderNumber,jdbcType=BIGINT},
            #{price,jdbcType=DECIMAL},
            #{img,jdbcType=VARCHAR},
            #{userId,jdbcType=BIGINT},
            #{productId,jdbcType=BIGINT},
            #{createTime,jdbcType=TIMESTAMP},
            #{updateTime,jdbcType=TIMESTAMP}
        )
    </insert>

    <insert id="insertBatch">
        insert into order_01 (
        order_number,
        price,
        img,
        user_id,
        product_id,
        create_time,
        update_time
        )
        <foreach collection="list" item="order" open="values (" separator="),(" close=")">
            #{order.orderNumber,jdbcType=BIGINT},
            #{order.price,jdbcType=DECIMAL},
            #{order.img,jdbcType=VARCHAR},
            #{order.userId,jdbcType=BIGINT},
            #{order.productId,jdbcType=BIGINT},
            #{order.createTime,jdbcType=TIMESTAMP},
            #{order.updateTime,jdbcType=TIMESTAMP}
        </foreach>
    </insert>

    <delete id="deleteAll">
        delete from order_01
    </delete>

    <delete id="deleteById">
        delete from order
        <where>
            id = #{id,jdbcType=BIGINT}
        </where>
    </delete>

    <select id="findAll" resultMap="baseResutMap">
        select
        <include refid="selectField"></include>
        from order_01
    </select>
</mapper>